# 10.6.3 Ожидание завершения задач в произвольном порядке
"""
Вызов метода result() объекта Future блокируется до тех пор, пока не
завершатся все задачи (либо посредством возврата значения, либо посредством
возбуждения исключения), или пока он не будет отменен. Результаты нескольких
задач становятся доступными в том порядке, в каком их выполнение было запланировано
c помощью метода map(). Если порядок, в каком должны обрабатываться результаты,
не имеет значения, то метод as_completed() позволяет обрабатывать
их по мере завершения каждой задачи.
"""
from concurrent import futures
import random
import time


def task(n):
    time.sleep(random.random())
    return (n, n / 10)


if __name__ == '__main__':
    """
    Поскольку в пуле содержится столько потоков, сколько имеется задач, можно
    запустить все задачи. Задачи завершаются в случайном порядке, поэтому значения, 
    генерируемые методом as_completed(), будут отличаться от одного запуска
    программы к другому.
    """
    ex = futures.ThreadPoolExecutor(max_workers=5)
    print('main: starting')

    wait_for = [
        ex.submit(task, i)
        for i in range(5, 0, -1)
    ]

    for f in futures.as_completed(wait_for):
        print('main: results: {}'.format(f.result()))
