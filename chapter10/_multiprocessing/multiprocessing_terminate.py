"""
10.4.6 Прекращение работы процесса

Несмотря на то чго для отправки сигнала, извещающего процесс о том, что
он должен завершить работу, лучше использовать метод "отравленнной таблетки"
(раздел 10.4.10), в тех случаях, когда вероятно зависание процесса или создание
ситуации взаимоблокировки, полезно иметь возможность принудительного завершения
процесса. Это обеспечивается вызовом метода terminate() для объекта дочернего процесса.
"""
import multiprocessing
import time


def slow_worker():
    print('Starting worker')
    time.sleep(0.1)
    print('Finished worker')


if __name__ == '__main__':
    p = multiprocessing.Process(target=slow_worker)
    print('BEFORE:', p, p.is_alive())

    p.start()
    print('DURING: ', p, p.is_alive())

    p.terminate()
    print('TEMINATED:', p, p.is_alive())
    """
    Важно вызвать метод
    join() для процесса после принудительного прекращения его работы, 
    чтобы код, управляющий процессом, имел достаточно времени для 
    обновления состояния объекта c учетом преждевременного завершения выполнения.
    """
    p.join()
    print('JOINED:', p, p.is_alive())
