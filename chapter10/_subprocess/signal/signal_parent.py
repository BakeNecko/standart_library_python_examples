"""
Межпроцессный обмен сигналами.
римерыуправления процессами для модуля os (раздел 17.3) включаютдемон-
страцию передачи сигналов между процессами c помощью функций os . fork () и
os.kill(). Поскольку каждый экземпляр Popen предоставляет атрибут pid, содержащий
идентификатор Юдочернего процесса, нечто аналогичное можно сделать
и c помощью модуля subprocess.

Следующий пример объединяет два сценария. Дочерний процесс устанавливает
дескриптор для сигнала USR. (singal_child.py)

Этот сценарий запускается в качестве родительского процесса. Он вызывает
сценарий singal_child.py, а затем посылает сигнал USR1.

sys.stdout.flash() - Стандартный вывод Python является буферизованным
(это означает, что он собирает часть данных, "записанных" в стандартный вывод,
прежде чем записать их на терминал). Вызов sys.stdout.flush() заставляет его
"промыть" буфер, что означает, что он запишет все данные в буфере на терминал,
даже если обычно он подождет, прежде чем сделать это.
"""

import os
import signal
import subprocess
import time
import sys

if __name__ == '__main__':
    proc = subprocess.Popen(['python3', 'singal_child.py'])
    print('PARENT           : Pausing before sending signal...')
    sys.stdout.flush()
    time.sleep(1)
    print('PARENT           : Signal child')
    sys.stdout.flush()
    os.kill(proc.pid, signal.SIGUSR1)
